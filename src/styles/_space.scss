// _space.scss - Enhanced Spacing Utilities

// Custom spacing map to extend Bootstrap's default spacing utilities
$custom-spacers: (
  "auto": auto,
  0: 0,
  1: 0.25rem,    // 4px
  2: 0.5rem,     // 8px
  3: 1rem,       // 16px
  4: 1.5rem,     // 24px
  5: 3rem,       // 48px
  6: 4rem,       // 64px
  7: 5rem,       // 80px
  8: 6rem,       // 96px
  9: 8rem,       // 128px
  10: 10rem,     // 160px
  "px": 1px,
  "xs": 0.125rem, // 2px
  "sm": 0.75rem,  // 12px
  "md": 2rem,     // 32px
  "lg": 4.5rem,   // 72px
  "xl": 9rem,     // 144px
  "2xl": 12rem    // 192px
);

// Create spacing functions for reusable access
@function space($key) {
  @return map-get($custom-spacers, $key);
}

// Vertical rhythm utilities
.vr-tight {
  > * + * {
    margin-top: space(2);
  }
}

.vr-base {
  > * + * {
    margin-top: space(3);
  }
}

.vr-loose {
  > * + * {
    margin-top: space(5);
  }
}

// Section spacing
.section-spacing {
  padding-top: space(5);
  padding-bottom: space(5);
  
  @include media-breakpoint-up(md) {
    padding-top: space(7);
    padding-bottom: space(7);
  }
  
  @include media-breakpoint-up(lg) {
    padding-top: space(8);
    padding-bottom: space(8);
  }
}

.section-spacing-sm {
  padding-top: space(3);
  padding-bottom: space(3);
  
  @include media-breakpoint-up(md) {
    padding-top: space(4);
    padding-bottom: space(4);
  }
  
  @include media-breakpoint-up(lg) {
    padding-top: space(5);
    padding-bottom: space(5);
  }
}

// Custom spacing utilities beyond Bootstrap defaults
// These extend Bootstrap's utilities with additional options

// X-Small spacing (0.125rem / 2px)
.mt-xs { margin-top: space("xs") !important; }
.me-xs { margin-right: space("xs") !important; }
.mb-xs { margin-bottom: space("xs") !important; }
.ms-xs { margin-left: space("xs") !important; }
.mx-xs { 
  margin-left: space("xs") !important;
  margin-right: space("xs") !important;
}
.my-xs { 
  margin-top: space("xs") !important;
  margin-bottom: space("xs") !important;
}
.m-xs { margin: space("xs") !important; }

.pt-xs { padding-top: space("xs") !important; }
.pe-xs { padding-right: space("xs") !important; }
.pb-xs { padding-bottom: space("xs") !important; }
.ps-xs { padding-left: space("xs") !important; }
.px-xs { 
  padding-left: space("xs") !important;
  padding-right: space("xs") !important;
}
.py-xs { 
  padding-top: space("xs") !important;
  padding-bottom: space("xs") !important;
}
.p-xs { padding: space("xs") !important; }

// Gap utilities
.gap-xs { gap: space("xs") !important; }
.gap-sm { gap: space("sm") !important; }
.gap-md { gap: space("md") !important; }
.gap-lg { gap: space("lg") !important; }
.gap-xl { gap: space("xl") !important; }
.gap-2xl { gap: space("2xl") !important; }

// Responsive gap utilities
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    
    .gap#{$infix}-0 { gap: 0 !important; }
    .gap#{$infix}-1 { gap: space(1) !important; }
    .gap#{$infix}-2 { gap: space(2) !important; }
    .gap#{$infix}-3 { gap: space(3) !important; }
    .gap#{$infix}-4 { gap: space(4) !important; }
    .gap#{$infix}-5 { gap: space(5) !important; }
    .gap#{$infix}-6 { gap: space(6) !important; }
    .gap#{$infix}-7 { gap: space(7) !important; }
    .gap#{$infix}-8 { gap: space(8) !important; }
    .gap#{$infix}-9 { gap: space(9) !important; }
    .gap#{$infix}-10 { gap: space(10) !important; }
    .gap#{$infix}-xs { gap: space("xs") !important; }
    .gap#{$infix}-sm { gap: space("sm") !important; }
    .gap#{$infix}-md { gap: space("md") !important; }
    .gap#{$infix}-lg { gap: space("lg") !important; }
    .gap#{$infix}-xl { gap: space("xl") !important; }
    .gap#{$infix}-2xl { gap: space("2xl") !important; }
  }
}

// Row and Column gap utilities
.row-gap-xs { row-gap: space("xs") !important; }
.row-gap-sm { row-gap: space("sm") !important; }
.row-gap-md { row-gap: space("md") !important; }
.row-gap-lg { row-gap: space("lg") !important; }
.row-gap-xl { row-gap: space("xl") !important; }

.column-gap-xs { column-gap: space("xs") !important; }
.column-gap-sm { column-gap: space("sm") !important; }
.column-gap-md { column-gap: space("md") !important; }
.column-gap-lg { column-gap: space("lg") !important; }
.column-gap-xl { column-gap: space("xl") !important; }

// Responsive row and column gap utilities
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    
    .row-gap#{$infix}-0 { row-gap: 0 !important; }
    .row-gap#{$infix}-1 { row-gap: space(1) !important; }
    .row-gap#{$infix}-2 { row-gap: space(2) !important; }
    .row-gap#{$infix}-3 { row-gap: space(3) !important; }
    .row-gap#{$infix}-4 { row-gap: space(4) !important; }
    .row-gap#{$infix}-5 { row-gap: space(5) !important; }
    
    .column-gap#{$infix}-0 { column-gap: 0 !important; }
    .column-gap#{$infix}-1 { column-gap: space(1) !important; }
    .column-gap#{$infix}-2 { column-gap: space(2) !important; }
    .column-gap#{$infix}-3 { column-gap: space(3) !important; }
    .column-gap#{$infix}-4 { column-gap: space(4) !important; }
    .column-gap#{$infix}-5 { column-gap: space(5) !important; }
  }
}

// Spacing Mixins for component creation
@mixin card-spacing {
  padding: space(3);
  
  @include media-breakpoint-up(md) {
    padding: space(4);
  }
}

@mixin form-spacing {
  margin-bottom: space(3);
  
  @include media-breakpoint-up(md) {
    margin-bottom: space(4);
  }
}

@mixin button-spacing {
  padding: space(2) space(3);
  
  @include media-breakpoint-up(md) {
    padding: space(2) space(4);
  }
  
  &.btn-lg {
    padding: space(3) space(5);
  }
  
  &.btn-sm {
    padding: space(1) space(2);
  }
}

// Mobile-specific spacing utilities
@include media-breakpoint-down(md) {
  .mb-mobile-1 { margin-bottom: space(1) !important; }
  .mb-mobile-2 { margin-bottom: space(2) !important; }
  .mb-mobile-3 { margin-bottom: space(3) !important; }
  .mb-mobile-4 { margin-bottom: space(4) !important; }
  
  .mt-mobile-1 { margin-top: space(1) !important; }
  .mt-mobile-2 { margin-top: space(2) !important; }
  .mt-mobile-3 { margin-top: space(3) !important; }
  .mt-mobile-4 { margin-top: space(4) !important; }
  
  .py-mobile-1 { padding-top: space(1) !important; padding-bottom: space(1) !important; }
  .py-mobile-2 { padding-top: space(2) !important; padding-bottom: space(2) !important; }
  .py-mobile-3 { padding-top: space(3) !important; padding-bottom: space(3) !important; }
  
  .px-mobile-1 { padding-left: space(1) !important; padding-right: space(1) !important; }
  .px-mobile-2 { padding-left: space(2) !important; padding-right: space(2) !important; }
  .px-mobile-3 { padding-left: space(3) !important; padding-right: space(3) !important; }
}

// Adaptive spacing - respond to viewport height
@media (max-height: 800px) {
  .section-spacing {
    padding-top: space(4);
    padding-bottom: space(4);
  }
  
  .section-spacing-sm {
    padding-top: space(2);
    padding-bottom: space(2);
  }
  
  .vr-base > * + * {
    margin-top: space(2);
  }
}

// Safe area inset utilities for notched devices
.safe-area-inset-top {
  padding-top: env(safe-area-inset-top, 0);
}

.safe-area-inset-bottom {
  padding-bottom: env(safe-area-inset-bottom, 0);
}

.safe-area-inset-left {
  padding-left: env(safe-area-inset-left, 0);
}

.safe-area-inset-right {
  padding-right: env(safe-area-inset-right, 0);
}

// Content width constraints
.content-width-xs {
  max-width: 20rem;  // 320px
  margin-left: auto;
  margin-right: auto;
}

.content-width-sm {
  max-width: 30rem;  // 480px
  margin-left: auto;
  margin-right: auto;
}

.content-width-md {
  max-width: 45rem;  // 720px
  margin-left: auto;
  margin-right: auto;
}

.content-width-lg {
  max-width: 60rem;  // 960px
  margin-left: auto;
  margin-right: auto;
}

.content-width-xl {
  max-width: 75rem;  // 1200px
  margin-left: auto;
  margin-right: auto;
}
